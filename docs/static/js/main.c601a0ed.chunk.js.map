{"version":3,"sources":["components/AddCategory.jsx","components/Gif.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","placeholder","value","onChange","target","Gif","img","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFecthGifs","cat","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uPA0CeA,EAtCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAkBzC,OACE,oCACE,0BACEC,SAbe,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAUZ,2BACEO,KAAK,OACLC,YAAY,YACZC,MAAOV,EACPW,SAvBkB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,aCMZG,G,MAZH,SAAC,GAAW,IAAVC,EAAS,EAATA,IAELC,EAAcD,EAAdC,MAAOC,EAAOF,EAAPE,IAEd,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,M,+BCVGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UAAUF,GAD3C,+DAEHG,MAAMR,GAFH,cAEfS,EAFe,gBAGAA,EAAIC,OAHJ,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAf,GACrB,MAAO,CACLgB,GAAIhB,EAAIgB,GACRf,MAAOD,EAAIC,MACXC,IAAKF,EAAIiB,OAAOC,iBAAiBhB,QAThB,kBAYdY,GAZc,4CAAH,sDC0BLK,EArBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEdtB,mBAAS,CACjC4B,KAAK,GACLO,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAgBxC,OATAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAAAC,GACrBH,EAAS,CACPT,KAAKY,EACLL,SAAS,SAGZ,CAACb,IAEGc,EDb0BK,CAAanB,GAAjCU,EAFiB,EAEtBJ,KAAcO,EAFQ,EAERA,QAEtB,OACE,oCACE,wBAAIjB,UAAU,iDAAiDI,GAC/D,wBAAIJ,UAAU,SACZiB,GAAW,uBAAGjB,UAAU,oCAAb,iBACb,yBAAKA,UAAU,aACVc,EAAOF,KAAI,SAAAY,GAAG,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAIX,GACThB,IAAK2B,UEQJE,EArBM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,aAFrB,mBAElB6C,EAFkB,KAEN9C,EAFM,KAIzB,OACE,oCACE,4CACE,kBAAC,EAAD,CACEA,cAAeA,IAEnB,6BACC8C,EAAWf,KAAI,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACEqB,IAAKrB,EACLA,SAAUA,SCdtBwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c601a0ed.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2 ){\r\n      setCategories(categ => [inputValue, ...categ]);\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n  \r\n  return ( \r\n    <>\r\n      <form\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"Categoria\"\r\n          value={inputValue}\r\n          onChange={ handleInputChange }          \r\n          />\r\n      </form>\r\n    </>\r\n   );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;","import React from 'react';\r\nimport './gif.css';\r\n\r\nconst Gif = ({img}) => {\r\n\r\n  const {title, url} = img;\r\n\r\n  return ( \r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Gif;","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5ciBJY87oY0Zj05HMGvN76kpFSX2t2CO`;\r\n  const res = await fetch(url);\r\n  const {data} = await res.json(); \r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs;\r\n}","import React from 'react';\r\nimport Gif from './Gif';\r\nimport './gifgrid.css';\r\nimport { useFecthGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n  \r\n  const { data:images , loading} = useFecthGifs(category);\r\n\r\n  return ( \r\n    <>\r\n      <h4 className=\"text-center animate__animated animate__fadeIn\">{category}</h4>\r\n      <hr className=\"w-50\"/>\r\n      { loading && <p className=\"animate__animated animate__flash\">Cargando Gifs</p>}\r\n      <div className=\"card-grid\">\r\n          {images.map(cat => (\r\n            <Gif \r\n              key={cat.id}\r\n              img={cat}\r\n            />\r\n          ))}\r\n      </div> \r\n    </>\r\n   );\r\n}\r\n \r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFecthGifs = (category) => {\r\n\r\n  const [state, setstate] = useState({\r\n    data:[],\r\n    loading: true\r\n  });\r\n  \r\n  useEffect(() => {\r\n    getGifs(category).then(imgs => {\r\n      setstate({\r\n        data:imgs, \r\n        loading: false\r\n      })\r\n    })\r\n  }, [category])\r\n\r\n  return state;\r\n}\r\n       ","import React,{ useState } from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n  \r\n  const [categories, setCategories] = useState(['Simpsons']);\r\n\r\n  return ( \r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n        <AddCategory\r\n          setCategories={setCategories}\r\n        />\r\n      <hr/>\r\n      {categories.map(category => (\r\n          <GifGrid \r\n            key={category}\r\n            category={category}\r\n          />\r\n      ))}\r\n    </>\r\n   );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}